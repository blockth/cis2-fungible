{"message":"unresolved import `concordium_cis2`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1357,"byte_end":1372,"line_start":29,"line_end":29,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":5,"highlight_end":20}],"label":"use of undeclared crate or module `concordium_cis2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a crate or module with a similar name","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1357,"byte_end":1372,"line_start":29,"line_end":29,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"concordium_std","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `concordium_cis2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse concordium_cis2::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `concordium_cis2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a crate or module with a similar name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse \u001b[0m\u001b[0m\u001b[38;5;10mconcordium_std\u001b[0m\u001b[0m::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"cannot find macro `vec` in this scope","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":41339,"byte_end":41342,"line_start":1225,"line_end":1225,"column_start":46,"column_end":49,"is_primary":true,"text":[{"text":"        let parameter = UpdateOperatorParams(vec![update]);","highlight_start":46,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `vec` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1225:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = UpdateOperatorParams(vec![update]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":41844,"byte_end":41890,"line_start":1238,"line_end":1238,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1238:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42005,"byte_end":42057,"line_start":1242,"line_end":1242,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        claim!(is_operator, \"Account should be an operator\");","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1242:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(is_operator, \"Account should be an operator\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `vec` in this scope","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":42429,"byte_end":42432,"line_start":1253,"line_end":1253,"column_start":22,"column_end":25,"is_primary":true,"text":[{"text":"            queries: vec![operator_of_query],","highlight_start":22,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `vec` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1253:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            queries: vec![operator_of_query],\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42761,"byte_end":42934,"line_start":1262,"line_end":1266,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            result.expect_report(\"Failed getting result value\").0,","highlight_start":1,"highlight_end":67},{"text":"            [true],","highlight_start":1,"highlight_end":20},{"text":"            \"Account should be an operator in the query response\"","highlight_start":1,"highlight_end":66},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1262:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            result.expect_report(\"Failed getting result value\").0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            [true],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Account should be an operator in the query response\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42972,"byte_end":43033,"line_start":1269,"line_end":1269,"column_start":9,"column_end":70,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"One event should be logged\");","highlight_start":9,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1269:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(logger.logs.len(), 1, \"One event should be logged\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":43043,"byte_end":43472,"line_start":1270,"line_end":1282,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(","highlight_start":1,"highlight_end":22},{"text":"                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(","highlight_start":1,"highlight_end":84},{"text":"                    UpdateOperatorEvent {","highlight_start":1,"highlight_end":42},{"text":"                        owner: ADDRESS_0,","highlight_start":1,"highlight_end":42},{"text":"                        operator: ADDRESS_1,","highlight_start":1,"highlight_end":45},{"text":"                        update: OperatorUpdate::Add,","highlight_start":1,"highlight_end":53},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            ),","highlight_start":1,"highlight_end":15},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1270:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            logger.logs[0],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Incorrect event emitted\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `vec` in this scope","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":39195,"byte_end":39198,"line_start":1163,"line_end":1163,"column_start":46,"column_end":49,"is_primary":true,"text":[{"text":"        let parameter = TransferParams::from(vec![transfer]);","highlight_start":46,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `vec` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1163:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":39771,"byte_end":39817,"line_start":1177,"line_end":1177,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1177:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40156,"byte_end":40302,"line_start":1188,"line_end":1192,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            300.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token owner balance should be decreased by the transferred amount\"","highlight_start":1,"highlight_end":80},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1188:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            300.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token owner balance should be decreased by the transferred amount\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40312,"byte_end":40461,"line_start":1193,"line_end":1197,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance1,","highlight_start":1,"highlight_end":22},{"text":"            100.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token receiver balance should be increased by the transferred amount\"","highlight_start":1,"highlight_end":83},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1193:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            100.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token receiver balance should be increased by the transferred amount\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40499,"byte_end":40565,"line_start":1200,"line_end":1200,"column_start":9,"column_end":75,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1200:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40575,"byte_end":40891,"line_start":1201,"line_end":1210,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":1,"highlight_end":58},{"text":"                from: ADDRESS_0,","highlight_start":1,"highlight_end":33},{"text":"                to: ADDRESS_1,","highlight_start":1,"highlight_end":31},{"text":"                token_id: TOKEN_0,","highlight_start":1,"highlight_end":35},{"text":"                amount: ContractTokenAmount::from(100),","highlight_start":1,"highlight_end":56},{"text":"            })),","highlight_start":1,"highlight_end":17},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1201:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            logger.logs[0],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                from: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Incorrect event emitted\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `vec` in this scope","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37898,"byte_end":37901,"line_start":1127,"line_end":1127,"column_start":46,"column_end":49,"is_primary":true,"text":[{"text":"        let parameter = TransferParams::from(vec![transfer]);","highlight_start":46,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `vec` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1127:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":38461,"byte_end":38590,"line_start":1140,"line_end":1144,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            err,","highlight_start":1,"highlight_end":17},{"text":"            ContractError::Unauthorized,","highlight_start":1,"highlight_end":41},{"text":"            \"Error is expected to be Unauthorized\"","highlight_start":1,"highlight_end":51},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1140:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            err,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ContractError::Unauthorized,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Error is expected to be Unauthorized\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `vec` in this scope","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":35664,"byte_end":35667,"line_start":1063,"line_end":1063,"column_start":46,"column_end":49,"is_primary":true,"text":[{"text":"        let parameter = TransferParams::from(vec![transfer]);","highlight_start":46,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `vec` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1063:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1063\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36163,"byte_end":36209,"line_start":1075,"line_end":1075,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1075:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1075\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36548,"byte_end":36695,"line_start":1086,"line_end":1090,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            300.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token owner balance should be decreased by the transferred amount.\"","highlight_start":1,"highlight_end":81},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1086:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1086\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1087\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1088\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            300.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1089\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token owner balance should be decreased by the transferred amount.\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1090\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36705,"byte_end":36854,"line_start":1091,"line_end":1095,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance1,","highlight_start":1,"highlight_end":22},{"text":"            100.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token receiver balance should be increased by the transferred amount\"","highlight_start":1,"highlight_end":83},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1091:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1091\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1092\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1093\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            100.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1094\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token receiver balance should be increased by the transferred amount\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1095\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36892,"byte_end":36958,"line_start":1098,"line_end":1098,"column_start":9,"column_end":75,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1098:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1098\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36968,"byte_end":37284,"line_start":1099,"line_end":1108,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":1,"highlight_end":58},{"text":"                from: ADDRESS_0,","highlight_start":1,"highlight_end":33},{"text":"                to: ADDRESS_1,","highlight_start":1,"highlight_end":31},{"text":"                token_id: TOKEN_0,","highlight_start":1,"highlight_end":35},{"text":"                amount: ContractTokenAmount::from(100),","highlight_start":1,"highlight_end":56},{"text":"            })),","highlight_start":1,"highlight_end":17},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1099:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1099\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            logger.logs[0],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                from: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Incorrect event emitted\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32111,"byte_end":32157,"line_start":966,"line_end":966,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:966:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m966\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32195,"byte_end":32322,"line_start":969,"line_end":973,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            host.state().tokens.iter().count(),","highlight_start":1,"highlight_end":48},{"text":"            2,","highlight_start":1,"highlight_end":15},{"text":"            \"Only one token is initialized\"","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:969:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m970\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            host.state().tokens.iter().count(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m971\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            2,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m972\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Only one token is initialized\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m973\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32482,"byte_end":32616,"line_start":978,"line_end":982,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            400.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Initial tokens are owned by the contract instantiater\"","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:978:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m978\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m979\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m980\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            400.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m981\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Initial tokens are owned by the contract instantiater\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m982\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32798,"byte_end":32946,"line_start":989,"line_end":993,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim_eq!(","highlight_start":13,"highlight_end":23},{"text":"                balance1,","highlight_start":1,"highlight_end":26},{"text":"                1.into(),","highlight_start":1,"highlight_end":26},{"text":"                \"Initial tokens are owned by the contract instantiater\"","highlight_start":1,"highlight_end":72},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:989:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m989\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m990\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                balance1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m991\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                1.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m992\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Initial tokens are owned by the contract instantiater\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m993\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32991,"byte_end":33062,"line_start":996,"line_end":996,"column_start":13,"column_end":84,"is_primary":false,"text":[{"text":"            claim_eq!(logger.logs.len(), 4, \"Exactly four events should be logged\");","highlight_start":13,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:996:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m996\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim_eq!(logger.logs.len(), 4, \"Exactly four events should be logged\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33076,"byte_end":33388,"line_start":997,"line_end":1004,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":1,"highlight_end":76},{"text":"                    owner: ADDRESS_0,","highlight_start":1,"highlight_end":38},{"text":"                    token_id: TOKEN_0,","highlight_start":1,"highlight_end":39},{"text":"                    amount: ContractTokenAmount::from(400),","highlight_start":1,"highlight_end":60},{"text":"                }))),","highlight_start":1,"highlight_end":22},{"text":"                \"Expected an event for minting TOKEN_0\"","highlight_start":1,"highlight_end":56},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:997:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m997\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m999\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    owner: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1000\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    token_id: TOKEN_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1003\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for minting TOKEN_0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1004\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33402,"byte_end":33712,"line_start":1005,"line_end":1012,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":1,"highlight_end":76},{"text":"                    owner: ADDRESS_0,","highlight_start":1,"highlight_end":38},{"text":"                    token_id: TOKEN_1,","highlight_start":1,"highlight_end":39},{"text":"                    amount: ContractTokenAmount::from(1),","highlight_start":1,"highlight_end":58},{"text":"                }))),","highlight_start":1,"highlight_end":22},{"text":"                \"Expected an event for minting TOKEN_1\"","highlight_start":1,"highlight_end":56},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1005:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1005\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1006\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1007\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    owner: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1008\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    token_id: TOKEN_1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1011\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for minting TOKEN_1\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1012\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33727,"byte_end":34402,"line_start":1014,"line_end":1028,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(","highlight_start":1,"highlight_end":48},{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":1,"highlight_end":93},{"text":"                        token_id: TOKEN_0,","highlight_start":1,"highlight_end":43},{"text":"                        metadata_url: (TokenMetadata {","highlight_start":1,"highlight_end":55},{"text":"                            url: \"url\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                            hash:","highlight_start":1,"highlight_end":34},{"text":"                                \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\"","highlight_start":1,"highlight_end":99},{"text":"                                    .to_string()","highlight_start":1,"highlight_end":49},{"text":"                        })","highlight_start":1,"highlight_end":27},{"text":"                        .to_metadata_url(),","highlight_start":1,"highlight_end":44},{"text":"                    })","highlight_start":1,"highlight_end":23},{"text":"                )),","highlight_start":1,"highlight_end":20},{"text":"                \"Expected an event for token metadata for TOKEN_0\"","highlight_start":1,"highlight_end":67},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1014:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1015\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1016\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1017\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        token_id: TOKEN_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1027\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for token metadata for TOKEN_0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":34417,"byte_end":35092,"line_start":1030,"line_end":1044,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(","highlight_start":1,"highlight_end":48},{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":1,"highlight_end":93},{"text":"                        token_id: TOKEN_1,","highlight_start":1,"highlight_end":43},{"text":"                        metadata_url: (TokenMetadata {","highlight_start":1,"highlight_end":55},{"text":"                            url: \"url\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                            hash:","highlight_start":1,"highlight_end":34},{"text":"                                \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\"","highlight_start":1,"highlight_end":99},{"text":"                                    .to_string()","highlight_start":1,"highlight_end":49},{"text":"                        })","highlight_start":1,"highlight_end":27},{"text":"                        .to_metadata_url(),","highlight_start":1,"highlight_end":44},{"text":"                    })","highlight_start":1,"highlight_end":23},{"text":"                )),","highlight_start":1,"highlight_end":20},{"text":"                \"Expected an event for token metadata for TOKEN_1\"","highlight_start":1,"highlight_end":67},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1030:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1030\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1031\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        token_id: TOKEN_1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for token metadata for TOKEN_1\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `format` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31773,"byte_end":31779,"line_start":903,"line_end":903,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"            let msg = format!($($arg),+);","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":30251,"byte_end":30371,"line_start":908,"line_end":912,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            state.tokens.iter().count(),","highlight_start":1,"highlight_end":41},{"text":"            0,","highlight_start":1,"highlight_end":15},{"text":"            \"Only one token is initialized\"","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `format` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:908:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m908\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            state.tokens.iter().count(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m911\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Only one token is initialized\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m912\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::fail` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find macro `vec` in this scope","code":null,"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":26113,"byte_end":26116,"line_start":775,"line_end":775,"column_start":42,"column_end":45,"is_primary":true,"text":[{"text":"    let parameter = TransferParams::from(vec![transfer]);","highlight_start":42,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find macro `vec` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:775:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m775\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `hex`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3910,"byte_end":3913,"line_start":103,"line_end":103,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"        let hex_res = hex::decode_to_slice(self.hash.to_owned(), &mut hash_bytes);","highlight_start":23,"highlight_end":26}],"label":"use of undeclared crate or module `hex`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `hex`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:103:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let hex_res = hex::decode_to_slice(self.hash.to_owned(), &mut hash_bytes);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `hex`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `hex`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4202,"byte_end":4205,"line_start":113,"line_end":113,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        hex::decode_to_slice(self.hash.to_string(), &mut hash_bytes).unwrap();","highlight_start":9,"highlight_end":12}],"label":"use of undeclared crate or module `hex`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `hex`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        hex::decode_to_slice(self.hash.to_string(), &mut hash_bytes).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `hex`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Error`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6349,"byte_end":6358,"line_start":181,"line_end":181,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        Cis2Error::Custom(c)","highlight_start":9,"highlight_end":18}],"label":"use of undeclared type `Cis2Error`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:181:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Cis2Error::Custom(c)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Error`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `SupportResult`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":11498,"byte_end":11511,"line_start":330,"line_end":330,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            SupportResult::SupportBy(addresses.to_vec())","highlight_start":13,"highlight_end":26}],"label":"use of undeclared type `SupportResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `SupportResult`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:330:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SupportResult::SupportBy(addresses.to_vec())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `SupportResult`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `SupportResult`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":11572,"byte_end":11585,"line_start":332,"line_end":332,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            SupportResult::NoSupport","highlight_start":13,"highlight_end":26}],"label":"use of undeclared type `SupportResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `SupportResult`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:332:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SupportResult::NoSupport\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `SupportResult`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":15816,"byte_end":15825,"line_start":472,"line_end":472,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        logger.log(&Cis2Event::Mint(MintEvent {","highlight_start":21,"highlight_end":30}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:472:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m472\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        logger.log(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":16007,"byte_end":16016,"line_start":479,"line_end":479,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        logger.log(&Cis2Event::TokenMetadata::<_, ContractTokenAmount>(","highlight_start":21,"highlight_end":30}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:479:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m479\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        logger.log(&Cis2Event::TokenMetadata::<_, ContractTokenAmount>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":18020,"byte_end":18029,"line_start":542,"line_end":542,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        logger.log(&Cis2Event::Transfer(TransferEvent {","highlight_start":21,"highlight_end":30}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:542:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        logger.log(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Receiver`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":18229,"byte_end":18237,"line_start":550,"line_end":550,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"        if let Receiver::Contract(address, entrypoint_name) = to {","highlight_start":16,"highlight_end":24}],"label":"use of undeclared type `Receiver`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Receiver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:550:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m550\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Receiver::Contract(address, entrypoint_name) = to {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Receiver`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `OperatorUpdate`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":19577,"byte_end":19591,"line_start":596,"line_end":596,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            OperatorUpdate::Add => state.add_operator(&sender, &param.operator, builder),","highlight_start":13,"highlight_end":27}],"label":"use of undeclared type `OperatorUpdate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `OperatorUpdate`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:596:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m596\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            OperatorUpdate::Add => state.add_operator(&sender, &param.operator, builder),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `OperatorUpdate`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `OperatorUpdate`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":19667,"byte_end":19681,"line_start":597,"line_end":597,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            OperatorUpdate::Remove => state.remove_operator(&sender, &param.operator),","highlight_start":13,"highlight_end":27}],"label":"use of undeclared type `OperatorUpdate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `OperatorUpdate`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:597:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m597\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            OperatorUpdate::Remove => state.remove_operator(&sender, &param.operator),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `OperatorUpdate`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":19823,"byte_end":19832,"line_start":602,"line_end":602,"column_start":14,"column_end":23,"is_primary":true,"text":[{"text":"            &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(","highlight_start":14,"highlight_end":23}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:602:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m602\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `OperatorOfQueryResponse`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":22518,"byte_end":22541,"line_start":676,"line_end":676,"column_start":18,"column_end":41,"is_primary":true,"text":[{"text":"    let result = OperatorOfQueryResponse::from(response);","highlight_start":18,"highlight_end":41}],"label":"use of undeclared type `OperatorOfQueryResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `OperatorOfQueryResponse`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:676:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m676\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let result = OperatorOfQueryResponse::from(response);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `OperatorOfQueryResponse`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `TokenMetadataQueryResponse`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":24110,"byte_end":24136,"line_start":722,"line_end":722,"column_start":18,"column_end":44,"is_primary":true,"text":[{"text":"    let result = TokenMetadataQueryResponse::from(response);","highlight_start":18,"highlight_end":44}],"label":"use of undeclared type `TokenMetadataQueryResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `TokenMetadataQueryResponse`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:722:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m722\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let result = TokenMetadataQueryResponse::from(response);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `TokenMetadataQueryResponse`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `AdditionalData`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":26039,"byte_end":26053,"line_start":772,"line_end":772,"column_start":15,"column_end":29,"is_primary":true,"text":[{"text":"        data: AdditionalData::empty(),","highlight_start":15,"highlight_end":29}],"label":"use of undeclared type `AdditionalData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `AdditionalData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:772:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m772\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        data: AdditionalData::empty(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `AdditionalData`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `TransferParams`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":26092,"byte_end":26106,"line_start":775,"line_end":775,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"    let parameter = TransferParams::from(vec![transfer]);","highlight_start":21,"highlight_end":35}],"label":"use of undeclared type `TransferParams`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `TransferParams`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:775:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m775\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `TransferParams`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `SupportResult`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":27164,"byte_end":27177,"line_start":810,"line_end":810,"column_start":27,"column_end":40,"is_primary":true,"text":[{"text":"            response.push(SupportResult::Support);","highlight_start":27,"highlight_end":40}],"label":"use of undeclared type `SupportResult`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `SupportResult`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:810:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m810\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            response.push(SupportResult::Support);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `SupportResult`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `SupportsQueryResponse`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":27307,"byte_end":27328,"line_start":815,"line_end":815,"column_start":18,"column_end":39,"is_primary":true,"text":[{"text":"    let result = SupportsQueryResponse::from(response);","highlight_start":18,"highlight_end":39}],"label":"use of undeclared type `SupportsQueryResponse`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `SupportsQueryResponse`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:815:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m815\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let result = SupportsQueryResponse::from(response);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `SupportsQueryResponse`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":33132,"byte_end":33141,"line_start":998,"line_end":998,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":49,"highlight_end":58}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:998:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":33458,"byte_end":33467,"line_start":1006,"line_end":1006,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":49,"highlight_end":58}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1006:49\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1006\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":33804,"byte_end":33813,"line_start":1016,"line_end":1016,"column_start":22,"column_end":31,"is_primary":true,"text":[{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":22,"highlight_end":31}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1016:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1016\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":34494,"byte_end":34503,"line_start":1032,"line_end":1032,"column_start":22,"column_end":31,"is_primary":true,"text":[{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":22,"highlight_end":31}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1032:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `AdditionalData`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":35583,"byte_end":35597,"line_start":1061,"line_end":1061,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"            data: AdditionalData::empty(),","highlight_start":19,"highlight_end":33}],"label":"use of undeclared type `AdditionalData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `AdditionalData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1061:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1061\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: AdditionalData::empty(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `AdditionalData`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `TransferParams`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":35643,"byte_end":35657,"line_start":1063,"line_end":1063,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"        let parameter = TransferParams::from(vec![transfer]);","highlight_start":25,"highlight_end":39}],"label":"use of undeclared type `TransferParams`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `TransferParams`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1063:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1063\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `TransferParams`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37029,"byte_end":37038,"line_start":1101,"line_end":1101,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":23,"highlight_end":32}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1101:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `AdditionalData`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37817,"byte_end":37831,"line_start":1125,"line_end":1125,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"            data: AdditionalData::empty(),","highlight_start":19,"highlight_end":33}],"label":"use of undeclared type `AdditionalData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `AdditionalData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1125:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: AdditionalData::empty(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `AdditionalData`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `TransferParams`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37877,"byte_end":37891,"line_start":1127,"line_end":1127,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"        let parameter = TransferParams::from(vec![transfer]);","highlight_start":25,"highlight_end":39}],"label":"use of undeclared type `TransferParams`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `TransferParams`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1127:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `TransferParams`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `AdditionalData`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":39114,"byte_end":39128,"line_start":1161,"line_end":1161,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"            data: AdditionalData::empty(),","highlight_start":19,"highlight_end":33}],"label":"use of undeclared type `AdditionalData`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `AdditionalData`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1161:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: AdditionalData::empty(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `AdditionalData`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `TransferParams`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":39174,"byte_end":39188,"line_start":1163,"line_end":1163,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"        let parameter = TransferParams::from(vec![transfer]);","highlight_start":25,"highlight_end":39}],"label":"use of undeclared type `TransferParams`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `TransferParams`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1163:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = TransferParams::from(vec![transfer]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `TransferParams`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":40636,"byte_end":40645,"line_start":1203,"line_end":1203,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":23,"highlight_end":32}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1203:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `OperatorUpdate`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":41262,"byte_end":41276,"line_start":1223,"line_end":1223,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"            update: OperatorUpdate::Add,","highlight_start":21,"highlight_end":35}],"label":"use of undeclared type `OperatorUpdate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `OperatorUpdate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1223:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            update: OperatorUpdate::Add,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `OperatorUpdate`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Cis2Event`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":43121,"byte_end":43130,"line_start":1273,"line_end":1273,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(","highlight_start":18,"highlight_end":27}],"label":"use of undeclared type `Cis2Event`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Cis2Event`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1273:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Cis2Event`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `OperatorUpdate`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":43349,"byte_end":43363,"line_start":1277,"line_end":1277,"column_start":33,"column_end":47,"is_primary":true,"text":[{"text":"                        update: OperatorUpdate::Add,","highlight_start":33,"highlight_end":47}],"label":"use of undeclared type `OperatorUpdate`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `OperatorUpdate`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1277:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        update: OperatorUpdate::Add,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `OperatorUpdate`\u001b[0m\n\n"}
{"message":"cannot find type `StandardIdentifier` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1691,"byte_end":1709,"line_start":37,"line_end":37,"column_start":28,"column_end":46,"is_primary":true,"text":[{"text":"const SUPPORTS_STANDARDS: [StandardIdentifier<'static>; 2] =","highlight_start":28,"highlight_end":46}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `StandardIdentifier` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:37:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst SUPPORTS_STANDARDS: [StandardIdentifier<'static>; 2] =\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `CIS0_STANDARD_IDENTIFIER` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1730,"byte_end":1754,"line_start":38,"line_end":38,"column_start":6,"column_end":30,"is_primary":true,"text":[{"text":"    [CIS0_STANDARD_IDENTIFIER, CIS2_STANDARD_IDENTIFIER];","highlight_start":6,"highlight_end":30}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CIS0_STANDARD_IDENTIFIER` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [CIS0_STANDARD_IDENTIFIER, CIS2_STANDARD_IDENTIFIER];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `CIS2_STANDARD_IDENTIFIER` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1756,"byte_end":1780,"line_start":38,"line_end":38,"column_start":32,"column_end":56,"is_primary":true,"text":[{"text":"    [CIS0_STANDARD_IDENTIFIER, CIS2_STANDARD_IDENTIFIER];","highlight_start":32,"highlight_end":56}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CIS2_STANDARD_IDENTIFIER` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:38:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [CIS0_STANDARD_IDENTIFIER, CIS2_STANDARD_IDENTIFIER];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `TokenIdU8` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":1941,"byte_end":1950,"line_start":45,"line_end":45,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"type ContractTokenId = TokenIdU8;","highlight_start":24,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TokenIdU8` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:45:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ContractTokenId = TokenIdU8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `TokenAmountU64` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":2012,"byte_end":2026,"line_start":48,"line_end":48,"column_start":28,"column_end":42,"is_primary":true,"text":[{"text":"type ContractTokenAmount = TokenAmountU64;","highlight_start":28,"highlight_end":42}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TokenAmountU64` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:48:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ContractTokenAmount = TokenAmountU64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `StandardIdentifierOwned` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":2721,"byte_end":2744,"line_start":66,"line_end":66,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"    id: StandardIdentifierOwned,","highlight_start":9,"highlight_end":32}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `StandardIdentifierOwned` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    id: StandardIdentifierOwned,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `MetadataUrl` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4121,"byte_end":4132,"line_start":111,"line_end":111,"column_start":34,"column_end":45,"is_primary":true,"text":[{"text":"    fn to_metadata_url(&self) -> MetadataUrl {","highlight_start":34,"highlight_end":45}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `MetadataUrl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:111:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn to_metadata_url(&self) -> MetadataUrl {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `MetadataUrl` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4281,"byte_end":4292,"line_start":114,"line_end":114,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        MetadataUrl {","highlight_start":9,"highlight_end":20}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `MetadataUrl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:114:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        MetadataUrl {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `MetadataUrl` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4820,"byte_end":4831,"line_start":131,"line_end":131,"column_start":39,"column_end":50,"is_primary":true,"text":[{"text":"    tokens: StateMap<ContractTokenId, MetadataUrl, S>,","highlight_start":39,"highlight_end":50}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":4667,"byte_end":4667,"line_start":127,"line_end":127,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"struct State<S> {","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", MetadataUrl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `MetadataUrl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:131:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct State<S> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `, MetadataUrl`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    tokens: StateMap<ContractTokenId, MetadataUrl, S>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `StandardIdentifierOwned` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4959,"byte_end":4982,"line_start":134,"line_end":134,"column_start":28,"column_end":51,"is_primary":true,"text":[{"text":"    implementors: StateMap<StandardIdentifierOwned, Vec<ContractAddress>, S>,","highlight_start":28,"highlight_end":51}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":4667,"byte_end":4667,"line_start":127,"line_end":127,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"struct State<S> {","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":", StandardIdentifierOwned","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `StandardIdentifierOwned` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:134:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mstruct State<S> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `, StandardIdentifierOwned`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    implementors: StateMap<StandardIdentifierOwned, Vec<ContractAddress>, S>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Cis2Error` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":5612,"byte_end":5621,"line_start":157,"line_end":157,"column_start":22,"column_end":31,"is_primary":true,"text":[{"text":"type ContractError = Cis2Error<CustomContractError>;","highlight_start":22,"highlight_end":31}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Cis2Error` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:157:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ContractError = Cis2Error<CustomContractError>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `StandardIdentifierOwned` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":11377,"byte_end":11400,"line_start":328,"line_end":328,"column_start":42,"column_end":65,"is_primary":true,"text":[{"text":"    fn have_implementors(&self, std_id: &StandardIdentifierOwned) -> SupportResult {","highlight_start":42,"highlight_end":65}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `StandardIdentifierOwned` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:328:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn have_implementors(&self, std_id: &StandardIdentifierOwned) -> SupportResult {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `SupportResult` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":11405,"byte_end":11418,"line_start":328,"line_end":328,"column_start":70,"column_end":83,"is_primary":true,"text":[{"text":"    fn have_implementors(&self, std_id: &StandardIdentifierOwned) -> SupportResult {","highlight_start":70,"highlight_end":83}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SupportResult` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:328:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn have_implementors(&self, std_id: &StandardIdentifierOwned) -> SupportResult {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `StandardIdentifierOwned` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":11721,"byte_end":11744,"line_start":339,"line_end":339,"column_start":17,"column_end":40,"is_primary":true,"text":[{"text":"        std_id: StandardIdentifierOwned,","highlight_start":17,"highlight_end":40}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `StandardIdentifierOwned` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:339:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        std_id: StandardIdentifierOwned,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `MintEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":15832,"byte_end":15841,"line_start":472,"line_end":472,"column_start":37,"column_end":46,"is_primary":true,"text":[{"text":"        logger.log(&Cis2Event::Mint(MintEvent {","highlight_start":37,"highlight_end":46}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `MintEvent` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:472:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m472\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        logger.log(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `TokenMetadataEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3521,"byte_end":3545,"line_start":91,"line_end":91,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct TokenMetadata {","highlight_start":1,"highlight_end":25}],"label":"similarly named struct `TokenMetadata` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":16071,"byte_end":16089,"line_start":480,"line_end":480,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"            TokenMetadataEvent {","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":16071,"byte_end":16089,"line_start":480,"line_end":480,"column_start":13,"column_end":31,"is_primary":true,"text":[{"text":"            TokenMetadataEvent {","highlight_start":13,"highlight_end":31}],"label":null,"suggested_replacement":"TokenMetadata","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `TokenMetadataEvent` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:480:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct TokenMetadata {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `TokenMetadata` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m480\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            TokenMetadataEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `TokenMetadata`\u001b[0m\n\n"}
{"message":"cannot find type `TransferParams` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":16253,"byte_end":16267,"line_start":489,"line_end":489,"column_start":26,"column_end":40,"is_primary":true,"text":[{"text":"type TransferParameter = TransferParams<ContractTokenId, ContractTokenAmount>;","highlight_start":26,"highlight_end":40}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TransferParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:489:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m489\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype TransferParameter = TransferParams<ContractTokenId, ContractTokenAmount>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find tuple struct or tuple variant `TransferParams` in this scope","code":{"code":"E0531","explanation":"An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":17291,"byte_end":17305,"line_start":519,"line_end":519,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    let TransferParams(transfers): TransferParameter = ctx.parameter_cursor().get()?;","highlight_start":9,"highlight_end":23}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0531]\u001b[0m\u001b[0m\u001b[1m: cannot find tuple struct or tuple variant `TransferParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:519:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m519\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let TransferParams(transfers): TransferParameter = ctx.parameter_cursor().get()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `Transfer` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":17467,"byte_end":17475,"line_start":523,"line_end":523,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    for Transfer {","highlight_start":9,"highlight_end":17}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `Transfer` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:523:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m523\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for Transfer {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `TransferEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":18040,"byte_end":18053,"line_start":542,"line_end":542,"column_start":41,"column_end":54,"is_primary":true,"text":[{"text":"        logger.log(&Cis2Event::Transfer(TransferEvent {","highlight_start":41,"highlight_end":54}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `TransferEvent` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:542:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        logger.log(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `OnReceivingCis2Params` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":18309,"byte_end":18330,"line_start":551,"line_end":551,"column_start":29,"column_end":50,"is_primary":true,"text":[{"text":"            let parameter = OnReceivingCis2Params {","highlight_start":29,"highlight_end":50}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `OnReceivingCis2Params` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:551:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m551\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let parameter = OnReceivingCis2Params {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find tuple struct or tuple variant `UpdateOperatorParams` in this scope","code":{"code":"E0531","explanation":"An unknown tuple struct/variant has been used.\n\nErroneous code example:\n\n```compile_fail,E0531\nlet Type(x) = Type(12); // error!\nmatch Bar(12) {\n    Bar(x) => {} // error!\n    _ => {}\n}\n```\n\nIn most cases, it's either a forgotten import or a typo. However, let's look at\nhow you can have such a type:\n\n```edition2018\nstruct Type(u32); // this is a tuple struct\n\nenum Foo {\n    Bar(u32), // this is a tuple variant\n}\n\nuse Foo::*; // To use Foo's variant directly, we need to import them in\n            // the scope.\n```\n\nEither way, it should work fine with our previous code:\n\n```edition2018\nstruct Type(u32);\n\nenum Foo {\n    Bar(u32),\n}\nuse Foo::*;\n\nlet Type(x) = Type(12); // ok!\nmatch Type(12) {\n    Type(x) => {} // ok!\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":19260,"byte_end":19280,"line_start":588,"line_end":588,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let UpdateOperatorParams(params) = ctx.parameter_cursor().get()?;","highlight_start":9,"highlight_end":29}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0531]\u001b[0m\u001b[0m\u001b[1m: cannot find tuple struct or tuple variant `UpdateOperatorParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:588:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m588\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let UpdateOperatorParams(params) = ctx.parameter_cursor().get()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `UpdateOperatorEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":19906,"byte_end":19925,"line_start":603,"line_end":603,"column_start":17,"column_end":36,"is_primary":true,"text":[{"text":"                UpdateOperatorEvent {","highlight_start":17,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `UpdateOperatorEvent` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:603:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m603\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                UpdateOperatorEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `BalanceOfQueryParams` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":20272,"byte_end":20292,"line_start":616,"line_end":616,"column_start":37,"column_end":57,"is_primary":true,"text":[{"text":"type ContractBalanceOfQueryParams = BalanceOfQueryParams<ContractTokenId>;","highlight_start":37,"highlight_end":57}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `BalanceOfQueryParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:616:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m616\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ContractBalanceOfQueryParams = BalanceOfQueryParams<ContractTokenId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `BalanceOfQueryResponse` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":20472,"byte_end":20494,"line_start":620,"line_end":620,"column_start":39,"column_end":61,"is_primary":true,"text":[{"text":"type ContractBalanceOfQueryResponse = BalanceOfQueryResponse<ContractTokenAmount>;","highlight_start":39,"highlight_end":61}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `BalanceOfQueryResponse` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:620:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m620\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ContractBalanceOfQueryResponse = BalanceOfQueryResponse<ContractTokenAmount>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `OperatorOfQueryResponse` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":22058,"byte_end":22081,"line_start":666,"line_end":666,"column_start":21,"column_end":44,"is_primary":true,"text":[{"text":") -> ContractResult<OperatorOfQueryResponse> {","highlight_start":21,"highlight_end":44}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":21948,"byte_end":21948,"line_start":663,"line_end":663,"column_start":39,"column_end":39,"is_primary":true,"text":[{"text":"fn contract_operator_of<S: HasStateApi>(","highlight_start":39,"highlight_end":39}],"label":null,"suggested_replacement":", OperatorOfQueryResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `OperatorOfQueryResponse` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:666:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m663\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn contract_operator_of<S: HasStateApi>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `, OperatorOfQueryResponse`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m666\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> ContractResult<OperatorOfQueryResponse> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `OperatorOfQueryParams` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":22129,"byte_end":22150,"line_start":668,"line_end":668,"column_start":17,"column_end":38,"is_primary":true,"text":[{"text":"    let params: OperatorOfQueryParams = ctx.parameter_cursor().get()?;","highlight_start":17,"highlight_end":38}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `OperatorOfQueryParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:668:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let params: OperatorOfQueryParams = ctx.parameter_cursor().get()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `TokenMetadataQueryParams` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":22755,"byte_end":22779,"line_start":683,"line_end":683,"column_start":41,"column_end":65,"is_primary":true,"text":[{"text":"type ContractTokenMetadataQueryParams = TokenMetadataQueryParams<ContractTokenId>;","highlight_start":41,"highlight_end":65}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TokenMetadataQueryParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:683:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m683\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype ContractTokenMetadataQueryParams = TokenMetadataQueryParams<ContractTokenId>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `TokenMetadataQueryResponse` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":23341,"byte_end":23367,"line_start":701,"line_end":701,"column_start":21,"column_end":47,"is_primary":true,"text":[{"text":") -> ContractResult<TokenMetadataQueryResponse> {","highlight_start":21,"highlight_end":47}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":23231,"byte_end":23231,"line_start":698,"line_end":698,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"fn contract_token_metadata<S: HasStateApi>(","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":", TokenMetadataQueryResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `TokenMetadataQueryResponse` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:701:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn contract_token_metadata<S: HasStateApi>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `, TokenMetadataQueryResponse`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> ContractResult<TokenMetadataQueryResponse> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `MetadataUrl` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":23961,"byte_end":23972,"line_start":716,"line_end":716,"column_start":28,"column_end":39,"is_primary":true,"text":[{"text":"        let metadata_url = MetadataUrl {","highlight_start":28,"highlight_end":39}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `MetadataUrl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:716:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m716\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let metadata_url = MetadataUrl {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `OnReceivingCis2Params` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25657,"byte_end":25678,"line_start":763,"line_end":763,"column_start":17,"column_end":38,"is_primary":true,"text":[{"text":"    let params: OnReceivingCis2Params<ContractTokenId, ContractTokenAmount> =","highlight_start":17,"highlight_end":38}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `OnReceivingCis2Params` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:763:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m763\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let params: OnReceivingCis2Params<ContractTokenId, ContractTokenAmount> =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `Transfer` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25846,"byte_end":25854,"line_start":767,"line_end":767,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    let transfer = Transfer {","highlight_start":20,"highlight_end":28}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `Transfer` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:767:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m767\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let transfer = Transfer {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Receiver`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":25988,"byte_end":25996,"line_start":771,"line_end":771,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        to: Receiver::from_account(ctx.owner()),","highlight_start":13,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use concordium_std::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use core::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Receiver`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:771:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m771\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        to: Receiver::from_account(ctx.owner()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse concordium_std::ops::Receiver;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse core::ops::Receiver;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse crate::ops::Receiver;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"cannot find type `SupportsQueryResponse` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":26813,"byte_end":26834,"line_start":802,"line_end":802,"column_start":21,"column_end":42,"is_primary":true,"text":[{"text":") -> ContractResult<SupportsQueryResponse> {","highlight_start":21,"highlight_end":42}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":26703,"byte_end":26703,"line_start":799,"line_end":799,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"fn contract_supports<S: HasStateApi>(","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":", SupportsQueryResponse","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SupportsQueryResponse` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:802:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m799\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn contract_supports<S: HasStateApi>(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `, SupportsQueryResponse`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m802\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> ContractResult<SupportsQueryResponse> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `SupportsQueryParams` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":26882,"byte_end":26901,"line_start":804,"line_end":804,"column_start":17,"column_end":36,"is_primary":true,"text":[{"text":"    let params: SupportsQueryParams = ctx.parameter_cursor().get()?;","highlight_start":17,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `SupportsQueryParams` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:804:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m804\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let params: SupportsQueryParams = ctx.parameter_cursor().get()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find function, tuple struct or tuple variant `TokenIdU8` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":28669,"byte_end":28678,"line_start":860,"line_end":860,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"    const TOKEN_0: ContractTokenId = TokenIdU8(2);","highlight_start":38,"highlight_end":47}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function, tuple struct or tuple variant `TokenIdU8` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:860:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m860\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const TOKEN_0: ContractTokenId = TokenIdU8(2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find function, tuple struct or tuple variant `TokenIdU8` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":28720,"byte_end":28729,"line_start":861,"line_end":861,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"    const TOKEN_1: ContractTokenId = TokenIdU8(42);","highlight_start":38,"highlight_end":47}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function, tuple struct or tuple variant `TokenIdU8` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:861:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m861\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    const TOKEN_1: ContractTokenId = TokenIdU8(42);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `MintEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":33148,"byte_end":33157,"line_start":998,"line_end":998,"column_start":65,"column_end":74,"is_primary":true,"text":[{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":65,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `MintEvent` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:998:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `MintEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":33474,"byte_end":33483,"line_start":1006,"line_end":1006,"column_start":65,"column_end":74,"is_primary":true,"text":[{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":65,"highlight_end":74}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `MintEvent` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1006:65\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1006\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `TokenMetadataEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3521,"byte_end":3545,"line_start":91,"line_end":91,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct TokenMetadata {","highlight_start":1,"highlight_end":25}],"label":"similarly named struct `TokenMetadata` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":33855,"byte_end":33873,"line_start":1016,"line_end":1016,"column_start":73,"column_end":91,"is_primary":true,"text":[{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":73,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":33855,"byte_end":33873,"line_start":1016,"line_end":1016,"column_start":73,"column_end":91,"is_primary":true,"text":[{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":73,"highlight_end":91}],"label":null,"suggested_replacement":"TokenMetadata","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `TokenMetadataEvent` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1016:73\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct TokenMetadata {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `TokenMetadata` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1016\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `TokenMetadata`\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `TokenMetadataEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3521,"byte_end":3545,"line_start":91,"line_end":91,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct TokenMetadata {","highlight_start":1,"highlight_end":25}],"label":"similarly named struct `TokenMetadata` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":34545,"byte_end":34563,"line_start":1032,"line_end":1032,"column_start":73,"column_end":91,"is_primary":true,"text":[{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":73,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":34545,"byte_end":34563,"line_start":1032,"line_end":1032,"column_start":73,"column_end":91,"is_primary":true,"text":[{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":73,"highlight_end":91}],"label":null,"suggested_replacement":"TokenMetadata","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `TokenMetadataEvent` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1032:73\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct TokenMetadata {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `TokenMetadata` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `TokenMetadata`\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `Transfer` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":35391,"byte_end":35399,"line_start":1056,"line_end":1056,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"        let transfer = Transfer {","highlight_start":24,"highlight_end":32}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `Transfer` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1056:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1056\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let transfer = Transfer {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Receiver`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":35530,"byte_end":35538,"line_start":1060,"line_end":1060,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            to: Receiver::from_account(ACCOUNT_1),","highlight_start":17,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use concordium_std::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use core::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Receiver`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1060:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1060\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to: Receiver::from_account(ACCOUNT_1),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse concordium_std::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse core::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `TransferEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37049,"byte_end":37062,"line_start":1101,"line_end":1101,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":43,"highlight_end":56}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `TransferEvent` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1101:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `Transfer` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37625,"byte_end":37633,"line_start":1120,"line_end":1120,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"        let transfer = Transfer {","highlight_start":24,"highlight_end":32}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `Transfer` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1120:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let transfer = Transfer {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Receiver`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":37681,"byte_end":37689,"line_start":1122,"line_end":1122,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            to: Receiver::from_account(ACCOUNT_1),","highlight_start":17,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use concordium_std::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use core::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Receiver`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1122:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to: Receiver::from_account(ACCOUNT_1),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse concordium_std::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse core::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `Transfer` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":38922,"byte_end":38930,"line_start":1156,"line_end":1156,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"        let transfer = Transfer {","highlight_start":24,"highlight_end":32}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `Transfer` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1156:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let transfer = Transfer {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared type `Receiver`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":38978,"byte_end":38986,"line_start":1158,"line_end":1158,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            to: Receiver::from_account(ACCOUNT_1),","highlight_start":17,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these items","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use concordium_std::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use core::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use crate::ops::Receiver;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared type `Receiver`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1158:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to: Receiver::from_account(ACCOUNT_1),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these items\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse concordium_std::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse core::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse crate::ops::Receiver;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `TransferEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":40656,"byte_end":40669,"line_start":1203,"line_end":1203,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":43,"highlight_end":56}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `TransferEvent` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1203:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `UpdateOperator` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":41192,"byte_end":41206,"line_start":1221,"line_end":1221,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"        let update = UpdateOperator {","highlight_start":22,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `UpdateOperator` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1221:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let update = UpdateOperator {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find function, tuple struct or tuple variant `UpdateOperatorParams` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":41318,"byte_end":41338,"line_start":1225,"line_end":1225,"column_start":25,"column_end":45,"is_primary":true,"text":[{"text":"        let parameter = UpdateOperatorParams(vec![update]);","highlight_start":25,"highlight_end":45}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find function, tuple struct or tuple variant `UpdateOperatorParams` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1225:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let parameter = UpdateOperatorParams(vec![update]);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `OperatorOfQuery` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":42253,"byte_end":42268,"line_start":1247,"line_end":1247,"column_start":33,"column_end":48,"is_primary":true,"text":[{"text":"        let operator_of_query = OperatorOfQuery {","highlight_start":33,"highlight_end":48}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `OperatorOfQuery` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1247:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let operator_of_query = OperatorOfQuery {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `OperatorOfQueryParams` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":42384,"byte_end":42405,"line_start":1252,"line_end":1252,"column_start":40,"column_end":61,"is_primary":true,"text":[{"text":"        let operator_of_query_vector = OperatorOfQueryParams {","highlight_start":40,"highlight_end":61}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `OperatorOfQueryParams` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1252:40\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let operator_of_query_vector = OperatorOfQueryParams {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `OperatorOfQueryResponse` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":42690,"byte_end":42713,"line_start":1260,"line_end":1260,"column_start":36,"column_end":59,"is_primary":true,"text":[{"text":"        let result: ContractResult<OperatorOfQueryResponse> = contract_operator_of(&ctx, &host);","highlight_start":36,"highlight_end":59}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":41024,"byte_end":41024,"line_start":1215,"line_end":1215,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"    fn test_add_operator() {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"<OperatorOfQueryResponse>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `OperatorOfQueryResponse` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1260:36\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn test_add_operator() {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `<OperatorOfQueryResponse>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let result: ContractResult<OperatorOfQueryResponse> = contract_operator_of(&ctx, &host);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find struct, variant or union type `UpdateOperatorEvent` in this scope","code":{"code":"E0422","explanation":"An identifier that is neither defined nor a struct was used.\n\nErroneous code example:\n\n```compile_fail,E0422\nfn main () {\n    let x = Foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `Foo` is undefined, so it inherently isn't anything, and\ndefinitely not a struct.\n\n```compile_fail\nfn main () {\n    let foo = 1;\n    let x = foo { x: 1, y: 2 };\n}\n```\n\nIn this case, `foo` is defined, but is not a struct, so Rust can't use it as\none.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":43208,"byte_end":43227,"line_start":1274,"line_end":1274,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"                    UpdateOperatorEvent {","highlight_start":21,"highlight_end":40}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0422]\u001b[0m\u001b[0m\u001b[1m: cannot find struct, variant or union type `UpdateOperatorEvent` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1274:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    UpdateOperatorEvent {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"type annotations needed","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3396,"byte_end":3403,"line_start":84,"line_end":84,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"            balances: state_builder.new_map(),","highlight_start":37,"highlight_end":44}],"label":"cannot infer type of the type parameter `K` declared on the associated function `new_map`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider specifying the generic arguments","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":3403,"byte_end":3403,"line_start":84,"line_end":84,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"            balances: state_builder.new_map(),","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":"::<K, V>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m: type annotations needed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:84:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balances: state_builder.new_map(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot infer type of the type parameter `K` declared on the associated function `new_map`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider specifying the generic arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            balances: state_builder.new_map\u001b[0m\u001b[0m\u001b[38;5;10m::<K, V>\u001b[0m\u001b[0m(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for struct `concordium_std::String` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":3941,"byte_end":3949,"line_start":103,"line_end":103,"column_start":54,"column_end":62,"is_primary":true,"text":[{"text":"        let hex_res = hex::decode_to_slice(self.hash.to_owned(), &mut hash_bytes);","highlight_start":54,"highlight_end":62}],"label":"method not found in `concordium_std::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/borrow.rs","byte_start":1652,"byte_end":1660,"line_start":59,"line_end":59,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn to_owned(&self) -> Self::Owned;","highlight_start":8,"highlight_end":16}],"label":"the method is available for `concordium_std::String` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for struct `concordium_std::String` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:103:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let hex_res = hex::decode_to_slice(self.hash.to_owned(), &mut hash_bytes);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `concordium_std::String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/borrow.rs:59:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn to_owned(&self) -> Self::Owned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe method is available for `concordium_std::String` here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_string` found for struct `concordium_std::String` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4233,"byte_end":4242,"line_start":113,"line_end":113,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"        hex::decode_to_slice(self.hash.to_string(), &mut hash_bytes).unwrap();","highlight_start":40,"highlight_end":49}],"label":"method not found in `concordium_std::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs","byte_start":77330,"byte_end":77339,"line_start":2489,"line_end":2489,"column_start":8,"column_end":17,"is_primary":false,"text":[],"label":"the method is available for `concordium_std::String` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use alloc::string::ToString;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_string` found for struct `concordium_std::String` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:113:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        hex::decode_to_slice(self.hash.to_string(), &mut hash_bytes).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `concordium_std::String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::string::ToString;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_string` found for struct `concordium_std::String` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":4321,"byte_end":4330,"line_start":115,"line_end":115,"column_start":27,"column_end":36,"is_primary":true,"text":[{"text":"            url: self.url.to_string(),","highlight_start":27,"highlight_end":36}],"label":"method not found in `concordium_std::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/string.rs","byte_start":77330,"byte_end":77339,"line_start":2489,"line_end":2489,"column_start":8,"column_end":17,"is_primary":false,"text":[],"label":"the method is available for `concordium_std::String` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":1353,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use concordium_cis2::*;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use alloc::string::ToString;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_string` found for struct `concordium_std::String` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:115:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            url: self.url.to_string(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `concordium_std::String`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::string::ToString;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"type annotations needed","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":6900,"byte_end":6907,"line_start":202,"line_end":202,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"            tokens: state_builder.new_map(),","highlight_start":35,"highlight_end":42}],"label":"cannot infer type of the type parameter `K` declared on the associated function `new_map`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider specifying the generic arguments","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6907,"byte_end":6907,"line_start":202,"line_end":202,"column_start":42,"column_end":42,"is_primary":true,"text":[{"text":"            tokens: state_builder.new_map(),","highlight_start":42,"highlight_end":42}],"label":null,"suggested_replacement":"::<K, V>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m: type annotations needed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:202:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tokens: state_builder.new_map(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot infer type of the type parameter `K` declared on the associated function `new_map`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider specifying the generic arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            tokens: state_builder.new_map\u001b[0m\u001b[0m\u001b[38;5;10m::<K, V>\u001b[0m\u001b[0m(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":29106,"byte_end":29114,"line_start":870,"line_end":870,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"                let url = \"url\".to_owned();","highlight_start":33,"highlight_end":41}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:870:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m870\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let url = \"url\".to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":29232,"byte_end":29240,"line_start":872,"line_end":872,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"                    \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\".to_owned();","highlight_start":88,"highlight_end":96}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:872:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m872\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\".to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":29478,"byte_end":29486,"line_start":882,"line_end":882,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"                let url = \"url\".to_owned();","highlight_start":33,"highlight_end":41}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:882:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m882\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let url = \"url\".to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":29604,"byte_end":29612,"line_start":884,"line_end":884,"column_start":88,"column_end":96,"is_primary":true,"text":[{"text":"                    \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\".to_owned();","highlight_start":88,"highlight_end":96}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:884:88\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m884\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\".to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":30251,"byte_end":30371,"line_start":908,"line_end":912,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            state.tokens.iter().count(),","highlight_start":1,"highlight_end":41},{"text":"            0,","highlight_start":1,"highlight_end":15},{"text":"            \"Only one token is initialized\"","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":30251,"byte_end":30371,"line_start":908,"line_end":912,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            state.tokens.iter().count(),","highlight_start":1,"highlight_end":41},{"text":"            0,","highlight_start":1,"highlight_end":15},{"text":"            \"Only one token is initialized\"","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:908:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m908\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            state.tokens.iter().count(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m911\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Only one token is initialized\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m912\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":30890,"byte_end":30898,"line_start":930,"line_end":930,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                    let url = \"url\".to_owned();","highlight_start":37,"highlight_end":45}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:930:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m930\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let url = \"url\".to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":31025,"byte_end":31033,"line_start":932,"line_end":932,"column_start":26,"column_end":34,"is_primary":true,"text":[{"text":"                        .to_owned();","highlight_start":26,"highlight_end":34}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:932:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m932\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        .to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":31270,"byte_end":31278,"line_start":942,"line_end":942,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                    let url = \"url\".to_owned();","highlight_start":37,"highlight_end":45}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:942:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m942\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let url = \"url\".to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_owned` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":31405,"byte_end":31413,"line_start":944,"line_end":944,"column_start":26,"column_end":34,"is_primary":true,"text":[{"text":"                        .to_owned();","highlight_start":26,"highlight_end":34}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::borrow::ToOwned;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_owned` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:944:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m944\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        .to_owned();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::borrow::ToOwned;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32111,"byte_end":32157,"line_start":966,"line_end":966,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32111,"byte_end":32157,"line_start":966,"line_end":966,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:966:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m966\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32195,"byte_end":32322,"line_start":969,"line_end":973,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            host.state().tokens.iter().count(),","highlight_start":1,"highlight_end":48},{"text":"            2,","highlight_start":1,"highlight_end":15},{"text":"            \"Only one token is initialized\"","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32195,"byte_end":32322,"line_start":969,"line_end":973,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            host.state().tokens.iter().count(),","highlight_start":1,"highlight_end":48},{"text":"            2,","highlight_start":1,"highlight_end":15},{"text":"            \"Only one token is initialized\"","highlight_start":1,"highlight_end":44},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:969:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m970\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            host.state().tokens.iter().count(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m971\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            2,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m972\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Only one token is initialized\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m973\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32482,"byte_end":32616,"line_start":978,"line_end":982,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            400.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Initial tokens are owned by the contract instantiater\"","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32482,"byte_end":32616,"line_start":978,"line_end":982,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            400.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Initial tokens are owned by the contract instantiater\"","highlight_start":1,"highlight_end":68},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:978:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m978\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m979\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m980\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            400.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m981\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Initial tokens are owned by the contract instantiater\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m982\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32798,"byte_end":32946,"line_start":989,"line_end":993,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim_eq!(","highlight_start":13,"highlight_end":23},{"text":"                balance1,","highlight_start":1,"highlight_end":26},{"text":"                1.into(),","highlight_start":1,"highlight_end":26},{"text":"                \"Initial tokens are owned by the contract instantiater\"","highlight_start":1,"highlight_end":72},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32798,"byte_end":32946,"line_start":989,"line_end":993,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim_eq!(","highlight_start":13,"highlight_end":23},{"text":"                balance1,","highlight_start":1,"highlight_end":26},{"text":"                1.into(),","highlight_start":1,"highlight_end":26},{"text":"                \"Initial tokens are owned by the contract instantiater\"","highlight_start":1,"highlight_end":72},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:989:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m989\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m990\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                balance1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m991\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                1.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m992\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Initial tokens are owned by the contract instantiater\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m993\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32991,"byte_end":33062,"line_start":996,"line_end":996,"column_start":13,"column_end":84,"is_primary":false,"text":[{"text":"            claim_eq!(logger.logs.len(), 4, \"Exactly four events should be logged\");","highlight_start":13,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":32991,"byte_end":33062,"line_start":996,"line_end":996,"column_start":13,"column_end":84,"is_primary":false,"text":[{"text":"            claim_eq!(logger.logs.len(), 4, \"Exactly four events should be logged\");","highlight_start":13,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:996:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m996\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim_eq!(logger.logs.len(), 4, \"Exactly four events should be logged\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33076,"byte_end":33388,"line_start":997,"line_end":1004,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":1,"highlight_end":76},{"text":"                    owner: ADDRESS_0,","highlight_start":1,"highlight_end":38},{"text":"                    token_id: TOKEN_0,","highlight_start":1,"highlight_end":39},{"text":"                    amount: ContractTokenAmount::from(400),","highlight_start":1,"highlight_end":60},{"text":"                }))),","highlight_start":1,"highlight_end":22},{"text":"                \"Expected an event for minting TOKEN_0\"","highlight_start":1,"highlight_end":56},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33076,"byte_end":33388,"line_start":997,"line_end":1004,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":1,"highlight_end":76},{"text":"                    owner: ADDRESS_0,","highlight_start":1,"highlight_end":38},{"text":"                    token_id: TOKEN_0,","highlight_start":1,"highlight_end":39},{"text":"                    amount: ContractTokenAmount::from(400),","highlight_start":1,"highlight_end":60},{"text":"                }))),","highlight_start":1,"highlight_end":22},{"text":"                \"Expected an event for minting TOKEN_0\"","highlight_start":1,"highlight_end":56},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:997:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m997\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m999\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    owner: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1000\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    token_id: TOKEN_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1003\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for minting TOKEN_0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1004\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33402,"byte_end":33712,"line_start":1005,"line_end":1012,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":1,"highlight_end":76},{"text":"                    owner: ADDRESS_0,","highlight_start":1,"highlight_end":38},{"text":"                    token_id: TOKEN_1,","highlight_start":1,"highlight_end":39},{"text":"                    amount: ContractTokenAmount::from(1),","highlight_start":1,"highlight_end":58},{"text":"                }))),","highlight_start":1,"highlight_end":22},{"text":"                \"Expected an event for minting TOKEN_1\"","highlight_start":1,"highlight_end":56},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33402,"byte_end":33712,"line_start":1005,"line_end":1012,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {","highlight_start":1,"highlight_end":76},{"text":"                    owner: ADDRESS_0,","highlight_start":1,"highlight_end":38},{"text":"                    token_id: TOKEN_1,","highlight_start":1,"highlight_end":39},{"text":"                    amount: ContractTokenAmount::from(1),","highlight_start":1,"highlight_end":58},{"text":"                }))),","highlight_start":1,"highlight_end":22},{"text":"                \"Expected an event for minting TOKEN_1\"","highlight_start":1,"highlight_end":56},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1005:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1005\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1006\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(&Cis2Event::Mint(MintEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1007\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    owner: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1008\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    token_id: TOKEN_1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1011\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for minting TOKEN_1\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1012\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `to_string` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":34013,"byte_end":34022,"line_start":1019,"line_end":1019,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"                            url: \"url\".to_string(),","highlight_start":40,"highlight_end":49}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::string::ToString;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_string` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1019:40\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1019\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   url: \"url\".to_string(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::string::ToString;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_string` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":34196,"byte_end":34205,"line_start":1022,"line_end":1022,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"                                    .to_string()","highlight_start":38,"highlight_end":47}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::string::ToString;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_string` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1022:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1022\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   .to_string()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::string::ToString;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33727,"byte_end":34402,"line_start":1014,"line_end":1028,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(","highlight_start":1,"highlight_end":48},{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":1,"highlight_end":93},{"text":"                        token_id: TOKEN_0,","highlight_start":1,"highlight_end":43},{"text":"                        metadata_url: (TokenMetadata {","highlight_start":1,"highlight_end":55},{"text":"                            url: \"url\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                            hash:","highlight_start":1,"highlight_end":34},{"text":"                                \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\"","highlight_start":1,"highlight_end":99},{"text":"                                    .to_string()","highlight_start":1,"highlight_end":49},{"text":"                        })","highlight_start":1,"highlight_end":27},{"text":"                        .to_metadata_url(),","highlight_start":1,"highlight_end":44},{"text":"                    })","highlight_start":1,"highlight_end":23},{"text":"                )),","highlight_start":1,"highlight_end":20},{"text":"                \"Expected an event for token metadata for TOKEN_0\"","highlight_start":1,"highlight_end":67},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":33727,"byte_end":34402,"line_start":1014,"line_end":1028,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(","highlight_start":1,"highlight_end":48},{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":1,"highlight_end":93},{"text":"                        token_id: TOKEN_0,","highlight_start":1,"highlight_end":43},{"text":"                        metadata_url: (TokenMetadata {","highlight_start":1,"highlight_end":55},{"text":"                            url: \"url\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                            hash:","highlight_start":1,"highlight_end":34},{"text":"                                \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\"","highlight_start":1,"highlight_end":99},{"text":"                                    .to_string()","highlight_start":1,"highlight_end":49},{"text":"                        })","highlight_start":1,"highlight_end":27},{"text":"                        .to_metadata_url(),","highlight_start":1,"highlight_end":44},{"text":"                    })","highlight_start":1,"highlight_end":23},{"text":"                )),","highlight_start":1,"highlight_end":20},{"text":"                \"Expected an event for token metadata for TOKEN_0\"","highlight_start":1,"highlight_end":67},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1014:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1015\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1016\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1017\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        token_id: TOKEN_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1027\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for token metadata for TOKEN_0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1028\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"no method named `to_string` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":34703,"byte_end":34712,"line_start":1035,"line_end":1035,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"                            url: \"url\".to_string(),","highlight_start":40,"highlight_end":49}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::string::ToString;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_string` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1035:40\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1035\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   url: \"url\".to_string(),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::string::ToString;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"no method named `to_string` found for reference `&'static str` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":34886,"byte_end":34895,"line_start":1038,"line_end":1038,"column_start":38,"column_end":47,"is_primary":true,"text":[{"text":"                                    .to_string()","highlight_start":38,"highlight_end":47}],"label":"method not found in `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait is implemented but not in scope; perhaps add a `use` for it:","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28335,"byte_end":28335,"line_start":853,"line_end":853,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"use alloc::string::ToString;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `to_string` found for reference `&'static str` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1038:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   .to_string()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&'static str`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait is implemented but not in scope; perhaps add a `use` for it:\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10muse alloc::string::ToString;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":34417,"byte_end":35092,"line_start":1030,"line_end":1044,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(","highlight_start":1,"highlight_end":48},{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":1,"highlight_end":93},{"text":"                        token_id: TOKEN_1,","highlight_start":1,"highlight_end":43},{"text":"                        metadata_url: (TokenMetadata {","highlight_start":1,"highlight_end":55},{"text":"                            url: \"url\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                            hash:","highlight_start":1,"highlight_end":34},{"text":"                                \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\"","highlight_start":1,"highlight_end":99},{"text":"                                    .to_string()","highlight_start":1,"highlight_end":49},{"text":"                        })","highlight_start":1,"highlight_end":27},{"text":"                        .to_metadata_url(),","highlight_start":1,"highlight_end":44},{"text":"                    })","highlight_start":1,"highlight_end":23},{"text":"                )),","highlight_start":1,"highlight_end":20},{"text":"                \"Expected an event for token metadata for TOKEN_1\"","highlight_start":1,"highlight_end":67},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":34417,"byte_end":35092,"line_start":1030,"line_end":1044,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            claim!(","highlight_start":13,"highlight_end":20},{"text":"                logger.logs.contains(&to_bytes(","highlight_start":1,"highlight_end":48},{"text":"                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {","highlight_start":1,"highlight_end":93},{"text":"                        token_id: TOKEN_1,","highlight_start":1,"highlight_end":43},{"text":"                        metadata_url: (TokenMetadata {","highlight_start":1,"highlight_end":55},{"text":"                            url: \"url\".to_string(),","highlight_start":1,"highlight_end":52},{"text":"                            hash:","highlight_start":1,"highlight_end":34},{"text":"                                \"db2ca420a0090593ac6559ff2a98ce30abfe665d7a18ff3c63883e8b98622a73\"","highlight_start":1,"highlight_end":99},{"text":"                                    .to_string()","highlight_start":1,"highlight_end":49},{"text":"                        })","highlight_start":1,"highlight_end":27},{"text":"                        .to_metadata_url(),","highlight_start":1,"highlight_end":44},{"text":"                    })","highlight_start":1,"highlight_end":23},{"text":"                )),","highlight_start":1,"highlight_end":20},{"text":"                \"Expected an event for token metadata for TOKEN_1\"","highlight_start":1,"highlight_end":67},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1030:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1030\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            claim!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1031\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                logger.logs.contains(&to_bytes(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    &Cis2Event::TokenMetadata::<_, ContractTokenAmount>(TokenMetadataEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        token_id: TOKEN_1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Expected an event for token metadata for TOKEN_1\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36163,"byte_end":36209,"line_start":1075,"line_end":1075,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36163,"byte_end":36209,"line_start":1075,"line_end":1075,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1075:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1075\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36548,"byte_end":36695,"line_start":1086,"line_end":1090,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            300.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token owner balance should be decreased by the transferred amount.\"","highlight_start":1,"highlight_end":81},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36548,"byte_end":36695,"line_start":1086,"line_end":1090,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            300.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token owner balance should be decreased by the transferred amount.\"","highlight_start":1,"highlight_end":81},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1086:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1086\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1087\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1088\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            300.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1089\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token owner balance should be decreased by the transferred amount.\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1090\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36705,"byte_end":36854,"line_start":1091,"line_end":1095,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance1,","highlight_start":1,"highlight_end":22},{"text":"            100.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token receiver balance should be increased by the transferred amount\"","highlight_start":1,"highlight_end":83},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36705,"byte_end":36854,"line_start":1091,"line_end":1095,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance1,","highlight_start":1,"highlight_end":22},{"text":"            100.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token receiver balance should be increased by the transferred amount\"","highlight_start":1,"highlight_end":83},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1091:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1091\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1092\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1093\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            100.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1094\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token receiver balance should be increased by the transferred amount\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1095\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36892,"byte_end":36958,"line_start":1098,"line_end":1098,"column_start":9,"column_end":75,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36892,"byte_end":36958,"line_start":1098,"line_end":1098,"column_start":9,"column_end":75,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1098:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1098\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36968,"byte_end":37284,"line_start":1099,"line_end":1108,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":1,"highlight_end":58},{"text":"                from: ADDRESS_0,","highlight_start":1,"highlight_end":33},{"text":"                to: ADDRESS_1,","highlight_start":1,"highlight_end":31},{"text":"                token_id: TOKEN_0,","highlight_start":1,"highlight_end":35},{"text":"                amount: ContractTokenAmount::from(100),","highlight_start":1,"highlight_end":56},{"text":"            })),","highlight_start":1,"highlight_end":17},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":36968,"byte_end":37284,"line_start":1099,"line_end":1108,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":1,"highlight_end":58},{"text":"                from: ADDRESS_0,","highlight_start":1,"highlight_end":33},{"text":"                to: ADDRESS_1,","highlight_start":1,"highlight_end":31},{"text":"                token_id: TOKEN_0,","highlight_start":1,"highlight_end":35},{"text":"                amount: ContractTokenAmount::from(100),","highlight_start":1,"highlight_end":56},{"text":"            })),","highlight_start":1,"highlight_end":17},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1099:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1099\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            logger.logs[0],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                from: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Incorrect event emitted\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":38461,"byte_end":38590,"line_start":1140,"line_end":1144,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            err,","highlight_start":1,"highlight_end":17},{"text":"            ContractError::Unauthorized,","highlight_start":1,"highlight_end":41},{"text":"            \"Error is expected to be Unauthorized\"","highlight_start":1,"highlight_end":51},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":38461,"byte_end":38590,"line_start":1140,"line_end":1144,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            err,","highlight_start":1,"highlight_end":17},{"text":"            ContractError::Unauthorized,","highlight_start":1,"highlight_end":41},{"text":"            \"Error is expected to be Unauthorized\"","highlight_start":1,"highlight_end":51},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1140:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            err,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ContractError::Unauthorized,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Error is expected to be Unauthorized\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":39771,"byte_end":39817,"line_start":1177,"line_end":1177,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":39771,"byte_end":39817,"line_start":1177,"line_end":1177,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1177:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40156,"byte_end":40302,"line_start":1188,"line_end":1192,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            300.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token owner balance should be decreased by the transferred amount\"","highlight_start":1,"highlight_end":80},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40156,"byte_end":40302,"line_start":1188,"line_end":1192,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance0,","highlight_start":1,"highlight_end":22},{"text":"            300.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token owner balance should be decreased by the transferred amount\"","highlight_start":1,"highlight_end":80},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1188:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            300.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token owner balance should be decreased by the transferred amount\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40312,"byte_end":40461,"line_start":1193,"line_end":1197,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance1,","highlight_start":1,"highlight_end":22},{"text":"            100.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token receiver balance should be increased by the transferred amount\"","highlight_start":1,"highlight_end":83},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40312,"byte_end":40461,"line_start":1193,"line_end":1197,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            balance1,","highlight_start":1,"highlight_end":22},{"text":"            100.into(),","highlight_start":1,"highlight_end":24},{"text":"            \"Token receiver balance should be increased by the transferred amount\"","highlight_start":1,"highlight_end":83},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1193:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            balance1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            100.into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Token receiver balance should be increased by the transferred amount\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40499,"byte_end":40565,"line_start":1200,"line_end":1200,"column_start":9,"column_end":75,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40499,"byte_end":40565,"line_start":1200,"line_end":1200,"column_start":9,"column_end":75,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");","highlight_start":9,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1200:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(logger.logs.len(), 1, \"Only one event should be logged\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40575,"byte_end":40891,"line_start":1201,"line_end":1210,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":1,"highlight_end":58},{"text":"                from: ADDRESS_0,","highlight_start":1,"highlight_end":33},{"text":"                to: ADDRESS_1,","highlight_start":1,"highlight_end":31},{"text":"                token_id: TOKEN_0,","highlight_start":1,"highlight_end":35},{"text":"                amount: ContractTokenAmount::from(100),","highlight_start":1,"highlight_end":56},{"text":"            })),","highlight_start":1,"highlight_end":17},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":40575,"byte_end":40891,"line_start":1201,"line_end":1210,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(&Cis2Event::Transfer(TransferEvent {","highlight_start":1,"highlight_end":58},{"text":"                from: ADDRESS_0,","highlight_start":1,"highlight_end":33},{"text":"                to: ADDRESS_1,","highlight_start":1,"highlight_end":31},{"text":"                token_id: TOKEN_0,","highlight_start":1,"highlight_end":35},{"text":"                amount: ContractTokenAmount::from(100),","highlight_start":1,"highlight_end":56},{"text":"            })),","highlight_start":1,"highlight_end":17},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1201:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            logger.logs[0],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(&Cis2Event::Transfer(TransferEvent {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                from: ADDRESS_0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Incorrect event emitted\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":41844,"byte_end":41890,"line_start":1238,"line_end":1238,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":41844,"byte_end":41890,"line_start":1238,"line_end":1238,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        claim!(result.is_ok(), \"Results in rejection\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1238:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(result.is_ok(), \"Results in rejection\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42005,"byte_end":42057,"line_start":1242,"line_end":1242,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        claim!(is_operator, \"Account should be an operator\");","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42005,"byte_end":42057,"line_start":1242,"line_end":1242,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        claim!(is_operator, \"Account should be an operator\");","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1242:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim!(is_operator, \"Account should be an operator\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42761,"byte_end":42934,"line_start":1262,"line_end":1266,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            result.expect_report(\"Failed getting result value\").0,","highlight_start":1,"highlight_end":67},{"text":"            [true],","highlight_start":1,"highlight_end":20},{"text":"            \"Account should be an operator in the query response\"","highlight_start":1,"highlight_end":66},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42761,"byte_end":42934,"line_start":1262,"line_end":1266,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            result.expect_report(\"Failed getting result value\").0,","highlight_start":1,"highlight_end":67},{"text":"            [true],","highlight_start":1,"highlight_end":20},{"text":"            \"Account should be an operator in the query response\"","highlight_start":1,"highlight_end":66},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1262:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            result.expect_report(\"Failed getting result value\").0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            [true],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Account should be an operator in the query response\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42972,"byte_end":43033,"line_start":1269,"line_end":1269,"column_start":9,"column_end":70,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"One event should be logged\");","highlight_start":9,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":42972,"byte_end":43033,"line_start":1269,"line_end":1269,"column_start":9,"column_end":70,"is_primary":false,"text":[{"text":"        claim_eq!(logger.logs.len(), 1, \"One event should be logged\");","highlight_start":9,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1269:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(logger.logs.len(), 1, \"One event should be logged\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the size for values of type `str` cannot be known at compilation time","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1202,"byte_end":1207,"line_start":36,"line_end":36,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":42,"highlight_end":47}],"label":"doesn't have a size known at compile-time","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":43043,"byte_end":43472,"line_start":1270,"line_end":1282,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(","highlight_start":1,"highlight_end":22},{"text":"                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(","highlight_start":1,"highlight_end":84},{"text":"                    UpdateOperatorEvent {","highlight_start":1,"highlight_end":42},{"text":"                        owner: ADDRESS_0,","highlight_start":1,"highlight_end":42},{"text":"                        operator: ADDRESS_1,","highlight_start":1,"highlight_end":45},{"text":"                        update: OperatorUpdate::Add,","highlight_start":1,"highlight_end":53},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            ),","highlight_start":1,"highlight_end":15},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":1169,"byte_end":1201,"line_start":36,"line_end":36,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        $crate::panicking::panic_display(&$arg)","highlight_start":9,"highlight_end":41}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31895,"byte_end":31912,"line_start":905,"line_end":905,"column_start":13,"column_end":30,"is_primary":false,"text":[{"text":"            panic!(\"{}\", msg)","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32986,"byte_end":33010,"line_start":948,"line_end":948,"column_start":13,"column_end":37,"is_primary":false,"text":[{"text":"            $crate::fail!($($arg),+)","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33726,"byte_end":33768,"line_start":969,"line_end":969,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        $crate::claim!($left == $right, $($arg),+)","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":43043,"byte_end":43472,"line_start":1270,"line_end":1282,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        claim_eq!(","highlight_start":9,"highlight_end":19},{"text":"            logger.logs[0],","highlight_start":1,"highlight_end":28},{"text":"            to_bytes(","highlight_start":1,"highlight_end":22},{"text":"                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(","highlight_start":1,"highlight_end":84},{"text":"                    UpdateOperatorEvent {","highlight_start":1,"highlight_end":42},{"text":"                        owner: ADDRESS_0,","highlight_start":1,"highlight_end":42},{"text":"                        operator: ADDRESS_1,","highlight_start":1,"highlight_end":45},{"text":"                        update: OperatorUpdate::Add,","highlight_start":1,"highlight_end":53},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            ),","highlight_start":1,"highlight_end":15},{"text":"            \"Incorrect event emitted\"","highlight_start":1,"highlight_end":38},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"claim_eq!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":33171,"byte_end":33192,"line_start":956,"line_end":956,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! claim_eq {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::claim!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":32722,"byte_end":32740,"line_start":935,"line_end":935,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! claim {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::fail!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.cargo/registry/src/github.com-1ecc6299db9ec823/concordium-std-5.1.0/src/types.rs","byte_start":31549,"byte_end":31566,"line_start":894,"line_end":894,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs","byte_start":218,"byte_end":236,"line_start":7,"line_end":7,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2015!","def_site_span":{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panic.rs","byte_start":738,"byte_end":758,"line_start":23,"line_end":23,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"pub macro panic_2015 {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `Sized` is not implemented for `str`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `panic_display`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs","byte_start":2964,"byte_end":2965,"line_start":71,"line_end":71,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"pub const fn panic_display<T: fmt::Display>(x: &T) -> ! {","highlight_start":28,"highlight_end":29}],"label":"required by this bound in `panic_display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the size for values of type `str` cannot be known at compilation time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1270:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        claim_eq!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            logger.logs[0],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            to_bytes(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                &Cis2Event::<ContractTokenId, ContractTokenAmount>::UpdateOperator(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Incorrect event emitted\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mdoesn't have a size known at compile-time\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `Sized` is not implemented for `str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `panic_display`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/bogachanyigitbasi/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/panicking.rs:71:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const fn panic_display<T: fmt::Display>(x: &T) -> ! {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `panic_display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2015` which comes from the expansion of the macro `claim_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 164 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 164 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0282, E0412, E0422, E0425, E0432, E0433, E0531, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0282, E0412, E0422, E0425, E0432, E0433, E0531, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
